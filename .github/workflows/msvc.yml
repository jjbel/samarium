# Github Action: Windows MSVC build

name: MSVC

on: [push, pull_request, fork]

env:
  # Path to the CMake build directory.
  build: "${{ github.workspace }}/build"
  CONAN_SYSREQUIRES_MODE: "enabled"
  CONAN_USER_HOME: "${{ github.workspace }}/release/"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/release/short"

jobs:
  windows-test:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install CMake
        run: python ./scripts/bootstrap/install_cmake.py

      - name: Install Conan
        id: conan
        run: python ./scripts/bootstrap/install_conan.py

# TODO Ninja not needed for CI?
      # - name: Install Ninja
        # uses: seanmiddleditch/gha-setup-ninja@master

      - name: Cache .conan2 directory
        id: cache-conan
        uses: actions/cache@v3
        env:
          cache-name: cache-conan-modules
        with:
          path: ${{ env.CONAN_USER_HOME }}
          key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}
          restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

      - name: Run Conan
        if: steps.cache-conan.outputs.cache-hit != 'true'
        run: conan install . -b missing -pr:b=default -o samarium/*:build_tests=True


      - name: CMake Configure
        run: cmake --preset=ci

      - name: CMake Build
        run: cmake --build --preset=default

      # - name: CTest
      #   run: ctest --preset=default

  # windows-install:
  #   runs-on: windows-2022
  #   steps:
  #     - name: Install Conan
  #       id: conan
  #       uses: turtlebrowser/get-conan@main

  #     - name: Install CMake
  #       uses: jwlawson/actions-setup-cmake@v1.13

  #     - name: Configure Conan
  #       run: |
  #         conan profile new default --detect

  #     - name: Git Clone
  #       run: git clone --depth 1 https://github.com/strangeQuark1041/samarium.git

  #     - name: Cache .conan directory
  #       id: cache-conan
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-conan-modules
  #       with:
  #         path: ${{ env.CONAN_USER_HOME }}
  #         key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}
  #         restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

      # - name: Check Conan Cache
      #   if: steps.cache-conan.outputs.cache-hit == 'true'
      #   run: echo "Cached"

      # - name: Run Conan
      #   if: steps.cache-conan.outputs.cache-hit != 'true'
      #   run: conan create samarium -b missing

      # - run: mkdir -p example
      # - run: cd example && git clone --depth 1 https://github.com/strangeQuark1041/samarium_example.git .
      # - run: cd example && echo '{"version":4}' > ./CMakeUserPresets.json
      # - run: cd example && cmake --preset=default
      # - run: cd example && cmake --build --preset=default
